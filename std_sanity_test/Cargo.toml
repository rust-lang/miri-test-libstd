[package]
name = "std_sanity_test"
version = "0.0.0"
license = "MIT OR Apache-2.0"
repository = "https://github.com/rust-lang/rust.git"
description = "The Rust Standard Library"
autotests = false
autobenches = false
edition = "2021"
build = "../library/std/build.rs"

[lib]
name = "std_sanity_test"
path = "../library/std/src/lib.rs"

[dependencies]
# just a bunch of fake crates that reeexport sysroot crates, so that std's imports work out
# (this works because we only build std as a test; the regular crate build is
# completely empty thanks to the `miri-test-libstd` feature below)
core = { path = "../fake/core" }
alloc = { path = "../fake/alloc" }
cfg-if = { path = "../fake/cfg-if" }
libc = { path = "../fake/libc" }
hashbrown = { path = "../fake/hashbrown" }
std_detect = { path = "../fake/std_detect" }
rustc-demangle = { path = "../fake/rustc-demangle" }

[dev-dependencies]
rand = { version = "0.8.5", default-features = false, features = ["alloc"] }
rand_xorshift = "0.3.0"

[features]
# Empty this crate
default = ["miri-test-libstd"]
miri-test-libstd = []

[[test]]
name = "env"
path = "../library/std/tests/env.rs"

[[test]]
name = "thread"
path = "../library/std/tests/thread.rs"

[[test]]
name = "run-time-detect"
path = "../library/std/tests/run-time-detect.rs"
